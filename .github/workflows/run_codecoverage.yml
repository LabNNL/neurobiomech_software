name: Code coverage

on: [pull_request]

env:
  BUILD_FOLDER: build

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            label: linux-64
            prefix: /usr/share/miniconda3/envs/stimwalker
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          activate-environment: stimwalker
          environment-file: environment.yml
        
      - name: Print mamba info
        run: | 
          mamba info
          mamba list
  
      - name: Setup Linux dependencies
        run:   |
         sudo apt update
         sudo apt install libstdc++-11-dev
        if: matrix.label == 'linux-64'
        
      - name: Install extra common dependencies
        run: | 
          git submodule update --init --recursive

      - name: Perform code coverage 
        run: |
          STIMWALKER_FOLDER=`pwd`
          CONDA_ENV_PATH=$CONDA/envs/stimwalker
          mkdir -p $BUILD_FOLDER
          cd $BUILD_FOLDER
          cmake -DCMAKE_INSTALL_PREFIX=$CONDA_ENV_PATH -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON ..
          cp -r test/models/ .
          make stimwalker_coverage -j${{ steps.cpu-cores.outputs.count }}
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info
          bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
          cd $STIMWALKER_FOLDER
